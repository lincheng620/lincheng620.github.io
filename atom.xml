<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>LoveLife</title>
  
  <subtitle>up</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2020-11-03T13:05:10.665Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>小林子</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>my-first-blog</title>
    <link href="http://example.com/2020/10/29/my-first-blog/"/>
    <id>http://example.com/2020/10/29/my-first-blog/</id>
    <published>2020-10-29T04:54:35.000Z</published>
    <updated>2020-11-03T13:05:10.665Z</updated>
    
    <content type="html"><![CDATA[<h2 id="arraylist与vector比较"><a class="markdownIt-Anchor" href="#arraylist与vector比较"></a> ArrayList与Vector比较</h2><p><img src="my-first-blog.assets/1.png" alt="1" /></p><ol><li>ArrayList出现于jdk1.2，vector出现于1.0.</li><li>继承的类实现的接口都是一样的，<ul><li>都继承了<strong>AbstractList类</strong>（继承后可以使用迭代器遍历），</li><li>实现了<strong>RandomAccess</strong>(标记接口，标明实现该接口的list支持快速随机访问)，</li><li><strong>cloneable接口</strong>（标识接口，合法调用clone方法），</li><li><strong>serializable</strong>（序列化标识接口）</li></ul></li><li>两者底层的数据存储都使用的<strong>Object数组</strong>实现<ul><li>因为是数组实现，所以具有<strong>查找快</strong>（因为数组的每个元素的首地址是可以得到的，数组是0序的，所以： 被访问元素的首地址=首地址+元素类型字节数*下标  ），</li><li><strong>增删慢</strong>（因为往数组中间增删元素时，为了保证存储空间的连续性，会导致后面所有元素地址的改变）的特点</li></ul></li><li>当两者<strong>容量</strong>不够时，都会进行对Object数组的扩容</li></ol><ul><li>ArrayList在底层数组不够用时在原来的基础上扩展0.5倍，Vector是扩展1倍。</li></ul><ol start="5"><li>线程的安全性不同<ul><li><p>vector是线程安全的,在vector的大多数方法都使用synchronized关键字修饰，</p></li><li><p>arrayList是线程不安全的（可以通过Collections.synchronizedList（）实现线程安全）</p></li><li><pre class="highlight"><code class="java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String args[])</span></span>&#123;    <span class="hljs-keyword">int</span> a = <span class="hljs-number">11</span>;    <span class="hljs-keyword">if</span>(a &gt; <span class="hljs-number">10</span>)&#123;        System.out.println(<span class="hljs-string">"a大于10"</span>);&#125;&#125;&lt;!--code￼<span class="hljs-number">0</span>--&gt;</code></pre></li></ul></li></ol>]]></content>
    
    
    <summary type="html">附加一段文章摘要，字数最好在140字以内，会出现在meta的description里面</summary>
    
    
    
    <category term="java" scheme="http://example.com/categories/java/"/>
    
    
    <category term="java" scheme="http://example.com/tags/java/"/>
    
    <category term="数据结构" scheme="http://example.com/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2020/10/29/hello-world/"/>
    <id>http://example.com/2020/10/29/hello-world/</id>
    <published>2020-10-29T01:35:06.900Z</published>
    <updated>2020-11-04T01:37:39.414Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
